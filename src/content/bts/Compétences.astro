---
import '../../styles/global.css';
import type { Contents } from '../../types/sections';

const base = import.meta.env.BASE_URL;

const contents: Contents = {
	titre1: {
		title: `Gérer le patrimoine informatique`,
		content: `
    <div class="section-container">
        <h3 class="subtitles collapsible">
            <span class="h3-content">Recenser et identifier les ressources numériques</span>
            <iconify-icon
                icon="gridicons:dropdown"
                class="collapse-icon"
                width="24"
                height="24">
            </iconify-icon>
        </h3>
        <div class="collapsible-content">
			<div class="competence-content">
            	<div class="content-flex">
                	<iconify-icon
                    	icon="line-md:chevron-small-double-right"
                    	class="icon-arrow"
                    	style="color: #B182EF;"
                    	width="20"
                    	height="20">
                	</iconify-icon>
                	<p class="p-content">
                    	Dans le cadre de la réouverture du magasin Afflelou après travaux, j’ai mené un recensement complet du parc informatique. Ce travail a permis d’identifier et de documenter l’ensemble des postes, périphériques et logiciels utilisés, afin d’optimiser le suivi technique et la gestion du matériel en magasin à l'avenir.
						Ayant aussi réalisé ce même inventaire avant les travaux, j'ai pu objectivement constater les changements et les améliorations apportées au matériel informatique. 
                	</p>
				</div>
				<a class="pdf-link" href="/portfolio/bts/realisations/#aa-page-4">
					<img class="pdf-icon" src="/portfolio/img/AP_AA.png" alt="PDF Icon Afflelou">
				</a>
            </div>
        </div>
    </div>
	<div class="section-container">
        <h3 class="subtitles collapsible">
            <span class="h3-content">Exploiter des référentiels, normes et standards adoptés par le prestataire informatique</span>
            <iconify-icon
                icon="gridicons:dropdown"
                class="collapse-icon"
                width="24"
                height="24">
            </iconify-icon>
        </h3>
        <div class="collapsible-content">
			<div class="competence-content">
            	<div class="content-flex">
                	<iconify-icon
                    	icon="line-md:chevron-small-double-right"
                    	class="icon-arrow"
                    	style="color: #B182EF;"
                    	width="20"
                    	height="20">
                	</iconify-icon>
                	<p class="p-content">
                    	Pour préparer mon environnement de développement chez Iknae Techno, j’ai déployé une machine virtuelle Ubuntu selon les standards professionnels. Le choix d’un OS open-source, la configuration réseau en bridge, l’installation des VMware Tools et la gestion de snapshots ont permis de garantir un environnement stable, sécurisé et conforme aux pratiques en entreprise.
                	</p>
				</div>
				<a class="pdf-link" href="/portfolio/bts/stages/#iknae-page-6">
					<img class="pdf-icon" src="/portfolio/img/Rapport_Iknae.png" alt="PDF Icon Iknae">
				</a>
            </div>
		</div>
	</div>
	<div class="section-container">
        <h3 class="subtitles collapsible">
            <span class="h3-content">Mettre en place et vérifier les niveaux d'habilitation associés à un service</span>
            <iconify-icon
                icon="gridicons:dropdown"
                class="collapse-icon"
                width="24"
                height="24">
            </iconify-icon>
        </h3>
        <div class="collapsible-content">
			<div class="competence-content">
            	<div class="content-flex">
                	<iconify-icon
                    	icon="line-md:chevron-small-double-right"
                    	class="icon-arrow"
                    	style="color: #B182EF;"
                    	width="20"
                    	height="20">
                	</iconify-icon>
                	<p class="p-content">
                    	Pour le projet Optitop, j’ai conçu un système de gestion des habilitations reposant sur des rôles utilisateurs définis : admin, manager, supermanager et collaborateur. Chaque rôle possède des droits d’accès spécifiques aux différentes fonctionnalités, contrôlés à la fois côté frontend et backend. Ce dispositif permet d’assurer une navigation sécurisée et adaptée à chaque profil.
                	</p>
				</div>
				<a class="pdf-link" href="/portfolio/bts/stages/#iknae-page-6">
					<img class="pdf-icon" src="/portfolio/img/optitop.png" alt="PDF Icon Optitop">
				</a>
            </div>
		</div>
	</div>`
	,
	},
	titre2: {
		title: "Répondre aux incidents et aux demandes d'assistance et d'évolution",
		content: 'Contenu de la section 2...',
	},
	titre3: {
		title: "Développer la présence en ligne de l'organisation",
		content: 'Contenu de la section 3...',
	},
	titre4: {
		title: 'Travailler en mode projet',
		content: 'Contenu de la section 4...',
	},
	titre5: {
		title: 'Mettre à disposition des utilisateurs un service informatique',
		content: 'Contenu de la section 5...',
	},
	titre6: {
		title: 'Organiser son développement professionnel',
		content: 'Contenu de la section 6...',
	},
};

// Définir les points de troncature pour chaque titre (uniquement ceux qui doivent être tronqués)
const truncatePoints = {
	titre2: 'demandes',
	titre3: 'ligne',
	titre5: 'utilisateurs',
};

// Fonction pour tronquer le texte après un mot spécifique
function truncateAfterWord(text: string, word?: string) {
	if (!word) return text; // Retourne le texte complet si pas de point de troncature
	const index = text.indexOf(word) + word.length;
	return text.substring(0, index) + '...';
}

const introText = `
    <div class="intro-text">
        <p>Cette page présente les compétences professionnelles évaluées dans le cadre de l'épreuve E5 « Support et mise à disposition de services informatiques ».</p>
		<br />
        <p>Chaque compétence est illustrée par des réalisations concrètes, issues de mes stages, de mon activité professionnelle ou de travaux encadrés réalisés durant ma formation.</p>
    </div>
`;
---

<div class="competences-container">
	<div id="left-part">
		<nav class="menu-vertical">
			<div class="menu-container">
				<ul class="menu-list">
					{
						Object.entries(contents).map(([id, { title }]) => (
							<li>
								<a
									href={`#${id}`}
									class="menu-link"
									data-section={id}
									title={title}
								>
									{truncateAfterWord(
										title,
										truncatePoints[
											id as keyof typeof truncatePoints
										]
									)}
								</a>
							</li>
						))
					}
				</ul>
			</div>
		</nav>
		<a
			href={`${base}docs/tableau_synthese.pdf`}
			target="_blank"
			rel="noopener noreferrer"
			class="table-link"
			><iconify-icon
				icon="mdi:file-pdf-box"
				class="icon-link"
				width="45"
				height="45"></iconify-icon><span class="content"
				>Tableau de Synthèse</span
			></a
		>
	</div>

	<div id="content-display" class="content-container">
		<!-- Affichage du texte d'intro par défaut -->
		<Fragment set:html={introText} />
	</div>
</div>

<script define:vars={{ contents, introText }}>
	const contentDisplay = document.querySelector('#content-display');

	if (!contentDisplay) {
		console.error("L'élément content-display n'a pas été trouvé");
		return;
	}

	// Maintenant contentDisplay est sûr à utiliser
	document.querySelectorAll('.menu-link').forEach((link) => {
		link.addEventListener('click', (e) => {
			e.preventDefault();

			// Vérification de type runtime
			if (!(e.currentTarget instanceof HTMLAnchorElement)) {
				return;
			}

			const sectionId = e.currentTarget.dataset.section;

			// Retire la classe active de tous les liens
			const activeLinks = document.querySelectorAll('.menu-link.active');
			activeLinks.forEach((l) => l.classList.remove('active'));

			// Si on reclique sur le même lien, on affiche le texte d'intro
			if (
				activeLinks.length === 1 &&
				activeLinks[0] === e.currentTarget
			) {
				contentDisplay.innerHTML = introText;
				return;
			}

			// Ajoute la classe active au lien cliqué
			e.currentTarget.classList.add('active');

			// Affiche le contenu correspondant
			if (sectionId && contents[sectionId]) {
				contentDisplay.innerHTML = `
                    <h2>${contents[sectionId].title}</h2>
                    <div>${contents[sectionId].content}</div>
                `;
			}
		});
	});

    document.addEventListener('DOMContentLoaded', function() {
        function setupCollapsibles() {
            document.querySelectorAll('.collapsible').forEach(header => {
                header.addEventListener('click', function() {
                    this.classList.toggle('active');
                    const content = this.nextElementSibling;
                    content.classList.toggle('collapsed');
                });
            });
        }

        // Configuration initiale
        setupCollapsibles();

        // Pour le contenu dynamique
        const observer = new MutationObserver(function(mutations) {
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes.length) {
                    setupCollapsibles();
                }
            });
        });

        // Observer le conteneur de contenu pour les changements
        const contentDisplay = document.getElementById('content-display');
        if (contentDisplay) {
            observer.observe(contentDisplay, { childList: true, subtree: true });
        }
    });
</script>

<style scoped>
	#left-part {
		display: flex;
		flex-direction: column;
		justify-content: start;
		gap: 3rem;
		padding-block: 3rem;
	}

	.menu-vertical {
		width: auto;
	}

	.menu-container {
		background: #00000033;
		backdrop-filter: blur(20px);
		padding: 1rem;
		border-radius: 14px;
		border: 0.03px solid #7c39fd47;
		width: auto;
	}

	.competences-container {
		display: flex;
		flex-direction: row;
		justify-content: flex-start;
		align-items: flex-start;
		gap: 2rem;
	}

	.menu-list {
		display: flex;
		flex-direction: column;
		gap: 1.5rem;
	}

	.menu-list li a {
		position: relative;
		color: var(--on-primary);
		font-size: 1.3rem;
		cursor: pointer;
		display: inline-block;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.menu-list li a::after {
		position: absolute;
		bottom: 0;
		left: 0;
		content: '';
		width: 100%;
		transform: scaleX(0);
		transform-origin: 0;
		height: 2px;
		background: var(--primary);
		transition: 0.35s transform;
	}

	:global(.intro-text) {
		line-height: 1.6;
		width: 69%;
	}

	/* Style pour le lien actif */
	.menu-list li a.active {
		color: var(--primary);
	}

	.menu-list li a.active::after {
		transform: scaleX(1);
		transform-origin: left;
	}

	/* Retirer le hover si le lien est déjà actif */
	.menu-list li a.active:hover::after {
		transform: scaleX(1);
	}

	.menu-list li a:hover {
		color: var(--primary-90);
	}

	.menu-list li a:hover::after {
		transform: scaleX(1);
	}

	.content-container {
		padding: 2rem;
	}

	.menu-link.active {
		color: var(--primary);
	}

	.menu-link.active::after {
		transform: scaleX(1);
	}

	.table-link {
		display: flex;
		flex-direction: row;
		font-size: 1.3rem;
		color: #bee7f5;
		vertical-align: center;
		align-items: center;
		gap: 1rem;
	}

	.table-link:hover {
		color: #4ccce6;
	}

	.content-flex {
		display: flex;
		flex-direction: row;
		gap: 1rem;
		align-items: flex-start;
	}

	:global(.content-flex) {
		display: flex;
		flex-direction: row;
		gap: 1rem;
		align-items: flex-start;
		justify-content: flex-start;
		width: 69%;
	}

	:global(.subtitles) {
		margin-block: 1rem;
	}

	:global(.pdf-link) {
		display: flex;          /* Ajout */
		align-items: center;    /* Centrage vertical */
		justify-content: center; /* Centrage horizontal */
		align-self: center;
		width: 96px;
		height: 120px;
		margin-inline: 7rem;
		border: 2px solid transparent; 
		transition: border-color 0.3s ease; 
		padding: 0.5rem;
		border-radius: 8px;
	}

	:global(.pdf-link:hover) {
		border-color: #D94CE8;
	}

	:global(.competence-content) {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		gap: 1rem;
		padding-bottom: 2rem;
	}

	:global(.pdf-icon) {
		width: 100%;           /* Pour que l'image s'adapte au conteneur */
		height: auto;          /* Maintient le ratio */
		object-fit: contain;   /* Assure que l'image est entièrement visible */
	}

	:global(.pdf-link:hover) {
			color: #D94CE8;
	}

	@media screen and (max-width: 768px) {
		.menu-vertical {
			bottom: 2rem;
			top: auto;
			left: 50%;
			transform: translateX(-50%);
			width: 90%;
		}

		.menu-list {
			flex-direction: row;
			justify-content: center;
			flex-wrap: wrap;
		}

		.content-container {
			margin-left: 0;
			margin-bottom: 150px;
		}
	}

	:global(.section-container) {
		margin-bottom: 2rem;
	}

	:global(.collapsible) {
		display: flex;
		justify-content:flex-start;
		align-items: center;
		cursor: pointer;
		user-select: none;
	}

	:global(.collapse-icon) {
		transition: transform 0.3s ease;
		color: #6DDDFB;
	}

	:global(.collapsible.active .collapse-icon) {
		transform: rotate(180deg);
	}

	:global(.collapsible-content) {
		max-height: 1000px;
		overflow: hidden;
		transition: max-height 0.3s ease-in-out;
	}

	:global(.collapsible-content.collapsed) {
		max-height: 0;
	}
</style>
